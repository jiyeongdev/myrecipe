plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

//Qclass가 생성될 곳을 정의한다.
// def querydslSrcDir = 'src/main/generated'
// sourceSets {
//   main {
//     java {
//       srcDirs += [ querydslSrcDir ]
//     }
//   }
// }

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter'

    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.jetbrains:annotations:20.1.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'software.amazon.awssdk:s3:2.20.82'
    implementation 'software.amazon.awssdk:auth:2.20.82'
    implementation 'software.amazon.awssdk:regions:2.20.82'
    implementation 'software.amazon.awssdk:core:2.20.82'

    // Lombok 라이브러리 추가
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    // 테스트 시 Lombok 사용
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'

    //JPA
    // 기본 JPA 의존성으로, Hibernate와 Jakarta EE를 포함합니다. 별도로 hibernate-core를 추가할 필요가 없습니다.
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.2.3'
    
    implementation 'mysql:mysql-connector-java:8.0.33' // MySQL 드라이버
    // implementation 'jakarta.persistence:jakarta.persistence-api:3.0.0' // JPA API
    // implementation 'org.hibernate.orm:hibernate-core:6.2.13.Final' // 잠시 주석! 이미 spring-boot에 포함되어있다고 함


    // //queryDSL
    // implementation 'com.querydsl:querydsl-jpa:5.0.0' // 최신 버전으로 변경
    // implementation "com.querydsl:querydsl-codegen:5.0.0" // QueryDSL 코드 생성
    // annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    // //Jakarta 설정 어노테이션에 사용된다.
    // // annotationProcessor 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    // annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.0.0'
    // annotationProcessor "jakarta.annotation:jakarta.annotation-api"

    // QueryDsl 설정
	// implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	// implementation "com.querydsl:querydsl-codegen:5.0.0" // QueryDSL 코드 생성
	// annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	// //Jakarta 설정 어노테이션에 사용된다.
	// annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	// annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // implementation 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    // implementation "jakarta.annotation:jakarta.annotation-api"
    // // 런타임에 jakarta.persistence.EntityManager를 사용하기 위해 추가
    // implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    
    //queryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}




tasks.named('test') {
    useJUnitPlatform()
}



task buildZip(type: Zip) {
    from compileJava
    from processResources
    dependencies {
//        exclude(group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat')
    }
    into('lib') {
        from(configurations.compileClasspath) {
            exclude 'tomcat-embed-*'
        }
    }
}
